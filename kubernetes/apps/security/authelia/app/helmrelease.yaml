---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app authelia
  namespace: security
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: redis
      namespace: databases
    - name: glauth
      namespace: security
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.2
              pullPolicy: IfNotPresent
            envFrom:
              - secretRef:
                  name: authelia-secret
        containers:
          main:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.38.8
            env:
              TZ: ${CONFG_TIMEZONE}
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_GROUPS_DN: "ou=groups"
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_ADDITIONAL_USERS_DN: "ou=people"
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_DISPLAY_NAME_ATTRIBUTE: "displayName"
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUP_NAME_ATTRIBUTE: "cn"
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_GROUPS_FILTER: "(member={dn})"
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_IMPLEMENTATION: "custom"
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_MAIL_ATTRIBUTE: "mail"
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_START_TLS: "false"
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_TIMEOUT: "5s"
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERNAME_ATTRIBUTE: "uid"
              AUTHELIA_AUTHENTICATION_BACKEND_LDAP_USERS_FILTER: "(&({username_attribute}={input})(objectClass=person))"
              AUTHELIA_AUTHENTICATION_BACKEND_PASSWORD_RESET_DISABLE: "true"
              AUTHELIA_AUTHENTICATION_BACKEND_REFRESH_INTERVAL: "1m"
              AUTHELIA_DEFAULT_2FA_METHOD: totp
              AUTHELIA_DEFAULT_REDIRECTION_URL: "https://auth.${SECRET_DOMAIN}"
              AUTHELIA_DUO_API_DISABLE: "true"
              AUTHELIA_LOG_FORMAT: json
              AUTHELIA_LOG_LEVEL: debug
              AUTHELIA_NOTIFIER_SMTP_DISABLE_REQUIRE_TLS: "true"
              AUTHELIA_NOTIFIER_DISABLE_STARTUP_CHECK: "true"
              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: "true"
              AUTHELIA_SESSION_DOMAIN: ${SECRET_DOMAIN}
              AUTHELIA_SESSION_NAME: authelia-${CONFIG_CLUSTER_NAME}
              AUTHELIA_SESSION_REMEMBER_ME_DURATION: 1y
              AUTHELIA_THEME: light
              AUTHELIA_TOTP_ISSUER: authelia.com
              AUTHELIA_WEBAUTHN_DISABLE: "true"
            envFrom:
              - secretRef:
                  name: authelia-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: 9091
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
    service:
      main:
        ports:
          http:
            port: 9091
          metrics:
            enabled: true
            port: 9959
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      main:
        enabled: true
        className: external
        hosts:
          - host: &host auth.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: authelia-tls
            hosts:
              - *host
    persistence:
      config:
        enabled: true
        type: configMap
        name: authelia-configmap
        globalMounts:
          - path: /config/configuration.yml
            subPath: configuration.yaml
            readOnly: true
