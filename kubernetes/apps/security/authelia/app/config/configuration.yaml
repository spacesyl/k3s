---
authentication_backend:
  password_reset:
    disable: true
  refresh_interval: 1m
  ldap:
    url: ldap://glauth-ldap:389
    implementation: custom
    timeout: 5s
    start_tls: false
    additional_users_dn: ou=people
    users_filter: (&({username_attribute}={input})(objectClass=person))
    additional_groups_dn: ou=groups
    groups_filter: (member={dn})
    # group_search_mode: filter
    # attributes:
    #   username: uid
    #   display_name: displayName
    #   mail: mail
    #   member_of: memberOf
    #   group_name: cn

totp:
  disable: false

server:
  buffers:
    read: 12288

access_control:
  default_policy: deny
  networks:
    - name: trusted
      networks: ["10.17.0.0/24"]
  rules:
    - domain: "*.${SECRET_DOMAIN}"
      networks:
        - trusted
      policy: bypass
    - domain: ["grafana.${SECRET_DOMAIN}"]
      policy: bypass
    - domain: "home.${SECRET_DOMAIN}"
      policy: one_factor
      subject:
        - "group:admins"
        - "group:app-home"

telemetry:
  metrics:
    enabled: true
    address: "tcp://0.0.0.0:9959"
    buffers:
      read: 4096
      write: 4096
    timeouts:
      read: 6s
      write: 6s
      idle: 30s

session:
  redis:
    high_availability:
      sentinel_name: redis-master
      nodes:
        - host: redis-headless.databases.svc.cluster.local
          port: 26379

identity_providers:
  oidc:
    enable_client_debug_messages: true
    cors:
      endpoints: ["authorization", "token", "revocation", "introspection"]
      allowed_origins_from_client_redirect_uris: true
    clients:
      - id: grafana
        description: Grafana
        secret: "${GRAFANA_OAUTH_CLIENT_SECRET}"
        public: false
        authorization_policy: one_factor
        pre_configured_consent_duration: 1y
        scopes: ["openid", "profile", "groups", "email"]
        redirect_uris: ["https://grafana.${SECRET_DOMAIN}/login/generic_oauth"]
        userinfo_signing_algorithm: none
