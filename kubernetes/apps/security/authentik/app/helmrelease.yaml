---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app authentik
  namespace: security
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.2.1
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-init:16.2
        imagePullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: authentik-secret
        env:
          - name: INIT_POSTGRES_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: cnpg-su-secret
                key: password
          - name: INIT_POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: authentik-secret-db
                key: username
          - name: INIT_POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: authentik-secret-db
                key: password
          - name: INIT_POSTGRES_DBNAME
            value: authentik
          - name: INIT_POSTGRES_HOST
            value: cnpg-authentik-rw.databases.svc.cluster.local
    annotations:
      secret.reloader.stakater.com/reload: authentik-secret
    authentik:
      log_level: info
      error_reporting:
        enable: false
        send_pii: false
      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
      redis:
        host: redis.databases.svc.cluster.local
    ingress:
      enabled: true
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: mdi:id-card
      ingressClassName: external
      hosts:
        - host: &host id.${SECRET_DOMAIN}
          paths:
            - path: /
      tls:
        - hosts:
            - *host
    envFrom:
      - secretRef:
          name: authentik-secret
    envValueFrom:
      AUTHENTIK_POSTGRESQL__NAME:
        secretKeyRef:
          name: authentik-secret-db
          key: username
      AUTHENTIK_POSTGRESQL__PASSWORD:
        secretKeyRef:
          name: authentik-secret-db
          key: password
    env:
      AUTHENTIK_POSTGRESQL__HOST: cnpg-authentik-rw.databases.svc.cluster.local
      # AUTHENTIK_POSTGRESQL__NAME: authentik
    postgresql:
      enabled: false
    redis:
      enabled: false
    geoip:
      enabled: false
    autoscaling:
      server:
        enabled: true
      worker:
        enabled: true
