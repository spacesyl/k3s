---
apiVersion: k0sctl.k0sproject.io/v1beta1
kind: Cluster
metadata:
  name: k0s-cluster
spec:
  hosts:
    - role: "controller+worker"
      ssh:
        address: "10.17.8.12"
        user: "root"
      installFlags:
        - --disable-components=metrics-server
        - --no-taints
      files:
        - name: containerd-config
          src: resources/containerd/
          dstDir: /home/root/
          perm: 0644
          user: root
          group: root
      hooks:
        apply:
          before:
            - sudo mv ~/unprivileged-ports.toml /etc/k0s/containerd.d/unprivileged-ports.toml
            - sudo mv ~/spegel.toml /etc/k0s/containerd.d/spegel.toml
        reset: &reset
          before:
            - sudo ip link delete cilium_host > /dev/null 2>&1 || true
            - sudo ip link delete cilium_net > /dev/null 2>&1 || true
            - sudo ip link delete cilium_vxlan > /dev/null 2>&1 || true
            - sudo iptables -t nat -F
            - sudo iptables -t mangle -F
            - sudo iptables -t filter -F
            - sudo iptables -t raw -F
            - sudo iptables -X
            - sudo ip6tables -t nat -F
            - sudo ip6tables -t mangle -F
            - sudo ip6tables -t filter -F
            - sudo ip6tables -t raw -F
            - sudo ip6tables -X
            - sudo rm -rf /etc/cni/net.d
          after:
            - sudo rm -rf /data/csi
            - nohup sudo -b bash -c 'sleep 5; reboot' &>/dev/null
    - role: "controller+worker"
      ssh:
        address: "10.17.8.13"
        user: "root"
      installFlags:
        - --disable-components=metrics-server
        - --no-taints
      files:
        - name: containerd-config
          src: resources/containerd/
          dstDir: /home/root/
          perm: 0644
          user: root
          group: root
      hooks:
        apply:
          before:
            - sudo mv ~/unprivileged-ports.toml /etc/k0s/containerd.d/unprivileged-ports.toml
            - sudo mv ~/spegel.toml /etc/k0s/containerd.d/spegel.toml
        reset: *reset
    - role: "controller+worker"
      ssh:
        address: "10.17.8.11"
        user: "root"
      installFlags:
        - --disable-components=metrics-server
        - --no-taints
      files:
        - name: containerd-config
          src: resources/containerd/
          dstDir: /home/root/
          perm: 0644
          user: root
          group: root
      hooks:
        apply:
          before:
            - sudo mv ~/unprivileged-ports.toml /etc/k0s/containerd.d/unprivileged-ports.toml
            - sudo mv ~/spegel.toml /etc/k0s/containerd.d/spegel.toml
        reset: *reset
    - role: worker
      ssh:
        address: "10.17.8.24"
        user: "root"
      files: &files
        - name: containerd-config
          src: resources/containerd/
          dstDir: /home/root/
          perm: 0644
          user: root
          group: root
      hooks:
        apply: &apply
          before:
            - sudo mv ~/unprivileged-ports.toml /etc/k0s/containerd.d/unprivileged-ports.toml
            - sudo mv ~/spegel.toml /etc/k0s/containerd.d/spegel.toml
        reset: *reset
    - role: worker
      ssh:
        address: "10.17.8.25"
        user: "root"
      files: *files
      hooks:
        apply: *apply
        reset: *reset
    - role: worker
      ssh:
        address: "10.17.8.26"
        user: "root"
      files: *files
      hooks:
        apply: *apply
        reset: *reset
  k0s:
    # renovate: datasource=github-releases depName=k0sproject/k0s
    version: "v1.28.5+k0s.0"
    dynamicConfig: false
    config:
      spec:
        telemetry:
          enabled: false
        controllerManager:
          extraArgs:
            # Required to monitor kube-controller-manager with kube-prometheus-stack
            bind-address: "0.0.0.0"
        scheduler:
          extraArgs:
            # Required to monitor kube-scheduler with kube-prometheus-stack
            bind-address: "0.0.0.0"
        storage:
          etcd:
            extraArgs:
              listen-metrics-urls: http://0.0.0.0:2381 # Required to monitor etcd with kube-prometheus-stack
        api:
          sans:
            - "10.17.8.98"
            - "10.17.8.12"
            - "k8s2"
            - "10.17.8.13"
            - "k8s3"
            - "10.17.8.11"
            - "k8s1"
        network:
          podCIDR: "10.42.0.0/16"
          serviceCIDR: "10.43.0.0/16"
          provider: custom
          kubeProxy:
            disabled: true
          nodeLocalLoadBalancing:
            enabled: true
            type: EnvoyProxy
        extensions:
          helm:
            repositories:
              - name: cilium
                url: https://helm.cilium.io
            charts:
              - name: cilium
                chartname: cilium/cilium
                # renovate: datasource=github-releases depName=cilium/cilium
                version: "1.14.5"
                namespace: kube-system
                values: |2
                  autoDirectNodeRoutes: true
                  bpf:
                    masquerade: true
                  bgp:
                    enabled: false
                  cluster:
                    name: home-cluster
                    id: 1
                  containerRuntime:
                    integration: containerd
                    socketPath: /var/run/k0s/containerd.sock
                  endpointRoutes:
                    enabled: true
                  hubble:
                    enabled: false
                  ipam:
                    mode: kubernetes
                  ipv4NativeRoutingCIDR: "10.42.0.0/16"
                  k8sServiceHost: localhost
                  k8sServicePort: 7443
                  kubeProxyReplacement: true
                  kubeProxyReplacementHealthzBindAddr: 0.0.0.0:10256
                  l2announcements:
                    enabled: true
                    # https://github.com/cilium/cilium/issues/26586
                    leaseDuration: 120s
                    leaseRenewDeadline: 60s
                    leaseRetryPeriod: 1s
                  loadBalancer:
                    algorithm: maglev
                    mode: "dsr"
                  localRedirectPolicy: true
                  operator:
                    replicas: 1
                    rollOutPods: true
                  rollOutCiliumPods: true
                  routingMode: native
                  securityContext:
                    privileged: true
